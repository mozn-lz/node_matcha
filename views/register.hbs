<div class="errors">
	<div class="row">
		{{#each error_list}}
		<div class="alert alert-danger border border-danger text-center col-sm-3" role="alert">{{this}}</div>
		{{/each}}
	</div>
</div>


<div class="col-12 text-center">
	<h4>Register</h4>
</div>
<form action="/register" method="post">
	<div class="row">
		<div class="col-md-6">
			<div class="form-group">
				<label for="username">Username</label>
				<input class="form-control" type="text" name="username" id="reg_username" placeholder="Username"
					required>
			</div>
			<div class="form-group">
				<label for="email">Email</label>
				<input class="form-control" type="text" name="email" id="reg_email" placeholder="Email" required>
			</div>
		</div>
		<div class="col-md-6">
			<div class="form-group">
				<label for="name">Name</label>
				<input class="form-control" type="text" name="name" id="reg_name" placeholder="Name" required>
			</div>
			<div class="form-group">
				<label for="surname">Surname</label>
				<input class="form-control" type="text" name="surname" id="reg_surname" placeholder="Surname" required>
			</div>
		</div>
	</div>
	<div class="form-group">
		<label for="password">Password</label>
		<input class="form-control" type="password" name="psswd" id="reg_password" placeholder="Password" required>
	</div>
	<div class="form-group">
		<label for="confirm_password">Confirm Password</label>
		<input class="form-control" type="password" name="psswd1" id="reg_confirm_password"
			placeholder="Confirm Password" required>
		<p id="reg_confirm_password"></p>
	</div>

	<div class="col-12 text-center">
		<button class="btn btn-success" type="submit">Signup</button>
	</div>
</form>

<div class="row fixed-bottom text-center">
	<div class="d-inline">
		<a href="/login"><button class="btn btn-primary">Login</button></a>
	</div>
</div>

<script>
	let validate_name = name => { return (/^[a-zA-Z]{3,14}\w$/.test(name)) };
	let validate_email = email => { return (/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1, 3}\.[0-9]{1, 3}\.[0-9]{1, 3}\.[0-9]{1, 3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(email)) };
	let validate_password = password => { return (/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\$%\^&\*])(?=.{8,})/.test(password)) };

	$('#reg_username').change(() => {
		if (validate_name($('#reg_username').val())) {
			$('#reg_username').css('border-color', 'green');
			return (true);
		} else {
			$('#reg_username').css('border-color', 'red');
			return (false);
		}
	});
	$('#reg_name').change(() => {
		if (validate_name($('#reg_name').val())) {
			$('#reg_name').css('border-color', 'green');
			return (true);
		} else {
			$('#reg_name').css('border-color', 'red');
			return (false);
		}
	});
	$('#reg_surname').change(() => {
		if (validate_name($('#reg_surname').val())) {
			$('#reg_surname').css('border-color', 'green');
			return (true);
		} else {
			$('#reg_surname').css('border-color', 'red');
			return (false);
		}
	});
	$('#reg_email').change(() => {
		if (validate_email($('#reg_email').val())) {
			$('#reg_email').css('border-color', 'green');
			return (true);
		} else {
			$('#reg_email').css('border-color', 'red');
			return (false);
		}
	});
	$('#reg_password').change(() => {
		if (validate_password($('#reg_password').val())) {
			$('#reg_password').css('border-color', 'green');
			return (true);
		} else {
			$('#reg_password').css('border-color', 'red');
			return (false);
		}
	});
	$('#reg_confirm_password').change(() => {
		if (validate_password($('#reg_confirm_password').val()) &&
			$('#reg_password').val() === $('#reg_confirm_password').val()) {
			$('#reg_confirm_password').css('border-color', 'green');
			return (true);
		} else {
			$('#reg_confirm_password').css('border-color', 'red');
			return (false);
		}
	});
	$('form').submit((e) => {
		if (reg_username && reg_name && reg_surname && reg_email && reg_password && reg_confirm_password && (reg_password === reg_confirm_password)) {
			$('form').submit()
		} else {
			e.preventDefault();
		}
	})
</script>